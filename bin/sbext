#!/usr/bin/env python

import sys
import json
import numpy as np
import argparse
import textwrap

def extract(pltfile,rootname):

   import datetime
   
   x = format(datetime.datetime.now(),'%Y-%m-%d %H:%M:%S')

   hstr = ''
   hstr += 'Speakerbench Extract | '+x+'\n'
   
   with open(pltfile) as data:
      dict = json.load(data)

   f  = np.array(dict['f'])

   # frd
   pb = np.array(dict['pbr'])+1j*np.array(dict['pbi'])
   u = 20*np.log10(abs(pb))
   v = np.unwrap(np.angle(pb))
   if v[-1] < -np.pi:
      v = v+2*np.pi

   x = np.c_[f,u,v*180/np.pi]
   outfile = rootname+'.frd'
   np.savetxt(outfile,x,fmt='%.8e',header=hstr)
   print('INFO: (sbext) Extracted '+outfile)

   # zma
   z = np.array(dict['zr'])+1j*np.array(dict['zi'])
   u = abs(z)
   v = np.unwrap(np.angle(z))
   if v[-1] < -np.pi:
      v = v+2*np.pi

   x = np.c_[f,u,v*180/np.pi]
   outfile = rootname+'.zma'
   np.savetxt(outfile,x,fmt='%.8e',header=hstr)
   print('INFO: (sbext) Extracted '+outfile)
    
   return 

def opts():

    mytext = '''\
    description:
       PLT files are generated by the Speakerbench box simulation app. This tool
       extracts the frd/zma data contained in a PLT file.
    '''

    parser=argparse.ArgumentParser(
       formatter_class=argparse.RawTextHelpFormatter,
       prog="sbext",
       description="Speakerbench Extract",
       epilog=textwrap.dedent(mytext))

    parser.add_argument('-i',
                        help="Speakerbench PLT file",
                        type=str,
                        default='null',
                        metavar='PLTFILE')

    parser.add_argument('-r',
                        help="rootname for extracted files",
                        type=str,
                        default='plt')

    args=parser.parse_args()
    
    return args.i,args.r

pltfile,rootfile = opts()

if pltfile == 'null':
    print('ERROR: (sbext) No PLT file specified.')
    sys.exit()


extract(pltfile,rootfile)
